#include<iostream>
#include<vector>
#include<string>
#include<Windows.h>
#include<ctime>
#include<fstream>
#include<iomanip>

using namespace std;

struct car
{
	int id;
	string mark;
	string category;
	float price;
	string color;
	int year;
	int old;
};

int main()
{
	setlocale(LC_ALL, "Rus");
	srand(time(NULL));
	vector<car> list;
	ifstream fin;

	/*
	int n;
	cout << "Size of game list:" << endl;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		game sample;
		cout << "Id:" << endl;
		cin >> sample.id;
		cout << "Mark:" << endl;
		cin >> sample.mark;
		cout << "Year of pass:" << endl;
		cin >> sample.year;
		cout << "Color:" << endl;
		cin >> sample.color;
		cout << "Category:" << endl;
		cin >> sample.category;
		cout << "Price:" << endl;
		cin >> sample.price;
		cout << "Used (1/0):" << endl;
		cin >> sample.old;

		list.push_back(sample);

	}
	*/
	fin.open("input.txt");
	if (fin.is_open())
	{
		while (!fin.eof())
		{
			car sample;
			fin >> sample.id;
			fin >> sample.mark;
			fin >> sample.year;
			fin >> sample.color;
			fin >> sample.category;
			fin >> sample.price;
			fin >> sample.old;
			list.push_back(sample);
		}
		fin.close();
	}
	else
	{
		cout << "Computer can't open this file" << endl;
		return 0;
	}
	/*
	cout << left << setw(10) << "Name:" << setw(10) << "Genre:" << setw(10) << "Weight (GB):" << setw(10) << "Year of pass:" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << left << setw(10) << list[i].id << setw(10) << list[i].mark << setw(10) << list[i].year << setw(10) << list[i].color << setw(10) << list[i].category << setw(10) << list[i].price << setw(10) << list[i].old << endl;
	}
	*/
	int answer = -1;
	while (answer != 0)
	{
			cout << endl;
			cout << endl;
			cout << "MENU" << endl;
			cout << endl;
			cout << "1. Print Autopark list" << endl;
			cout << "2. Add a vehicle" << endl;
			cout << "3. Delete a vehicle id/category" << endl;
			cout << "4. Category information" << endl;
			cout << "5. Save  thecarlist into the file" << endl;
			cout<<"6. Sort by year of pass" << endl;
			cout << "7. Cost information" << endl;
			cout << "8. Make a photocard into a new file" << endl;
			
			cout << "0. Exit " << endl;
		cin >> answer;
		switch (answer)
		{
				case 1: //Write information into console
				{
					for (int i = 0; i < list.size(); i++)
					{
						cout << left << setw(10) << list[i].id << setw(10) << list[i].mark << setw(10) << list[i].year << setw(10) << list[i].color << setw(10) << list[i].category << setw(10) << list[i].price << setw(10) << list[i].old << endl;
					}
					break;
				}
				case 2: //Add vehicle
				{
					car sample;
					cout << "Id:" << endl;
					cin >> sample.id;
					cout << "Mark:" << endl;
					cin >> sample.mark;
					cout << "Year of pass:" << endl;
					cin >> sample.year;
					cout << "Color:" << endl;
					cin >> sample.color;
					cout << "Category:" << endl;
					cin >> sample.category;
					cout << "Price:" << endl;
					cin >> sample.price;
					cout << "Used (1/0):" << endl;
					cin >> sample.old;

					list.push_back(sample);
					break;
				}
				case 3:  //Delete vehicle
				{
					/*
					int n;
					int id;
					string model;
					int yearofpass;
					string color;
					string category;
					int price;
					int used;
					cout << "How many cars do You want to delete?" << endl;
					cin >> n;
					for (int i = 0; i < n; i++)
					{
						cout << "Vehicle's ID (If this step does not matter - write 0):" << endl;
						cin >> id;
						cout << "Vehicle's Mark (If this step does not matter - write 0):" << endl;
						getline(cin, model);
						cout << "Vehicle's year of pass (If this step does not matter - write 0):" << endl;
						cin >> yearofpass;
						cout << "Vehicle's color (If this step does not matter - write 0):" << endl;
						cin >> color;
						cout << "Vehicle's category(sport/heavy/light) (If this step does not matter - write 0):" << endl;
						cin >> category;
						cout << "Vehicle's Price $ (If this step does not matter - write 0):" << endl;
						cin >> price;
						cout << "Is vehicle used? (1/0) (If this step does not matter - write -):" << endl;
						cin >> used;
					}
					
					if (id != 0 || model[0] != '0' || yearofpass != 0 || color[0] != '0' || category[0] != '0' || price != 0 || used != -1)
					{
						*/


					int id;
					string model;
					int yearofpass;
					string color;
					string category;
					int price;
					int used;

						int choise = 1;
						while(choise!=0)
						{
	
							switch (choise)
							{
								case 1:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter ID, please (1324 for example)." << endl;
									cin >> id;
									
								}
								case 2:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter Mark, please. (Audi, BMW for example)." << endl;
									cin >> model;
									
								}
								case 3:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter year of pass, please (2004 for example)" << endl;
									cin >> yearofpass;
									
								}
								case 4:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter color, please. (red, yellow, green for example)." << endl;
									cin >> color;
									
								}
								case 5:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter category, please. (sport or heavy or light)." << endl;
									cin >> category;
									
								}
								case 6:
								{
									cout << "(If this step does not matter - write 0)" << endl;
									cout << "Enter price, please. ($)." << endl;
									cin >> price;
									
								}
								case 7:
								{
									cout << "(If this step does not matter - write -1)" << endl;
									cout << "A vehicle is used? (1/0)" << endl;
									cin >> used;
									break;
								}
								case 0:
								{
									cout << "Continuing.." << endl;
									break;
								}
								default:
								{
									cout << "Unknown value. Please, try again!" << endl;
									system("pause");
									break;
								}

							}
							cout << "1. Edit vehicle's ID " << endl;
							cout << "2. Edit vehicle's Mark" << endl;
							cout << "3. Edit vehicle's Year of pass" << endl;
							cout << "4. Edit vehicle's color" << endl;
							cout << "5. Edit vehicle's category(sport/heavy/light)" << endl;
							cout << "6. Edit vehicle's price ($)" << endl;
							cout << "7. Edit vehicle's state" << endl;
							cout << "0. Continue" << endl;
							cin >> choise;
							
						}
						if (id != 0 || model[0] != '0' || yearofpass != 0 || color[0] != '0' || category[0] != '0' || price != 0 || used != -1)
						{
							car deleted;
							deleted.id = id;
							deleted.mark = model;
							deleted.category = category;
							deleted.year = yearofpass;
							deleted.color = color;
							deleted.price = price;
							deleted.old = used;
							for (int i = 0; i < list.size(); i++)
							{
								if (id == 0)
								{
									deleted.id = list[i].id;
								}
								if (model[0] == '0')
								{
									deleted.mark = list[i].mark;
								}
								if (category[0] == '0')
								{
									deleted.category = list[i].category;
								}
								if (yearofpass == 0)
								{
									deleted.year = list[i].year;
								}
								if (color[0] == '0')
								{
									deleted.color = list[i].color;
								}
								if (price == 0)
								{
									deleted.price = list[i].price;
								}
								if (used == -1)
								{
									deleted.old = list[i].old;
								}
								if ((deleted.id == list[i].id) && (deleted.mark == list[i].mark) && (deleted.category == list[i].category) && (deleted.year == list[i].year) && (deleted.color == list[i].color) && (deleted.price == list[i].price) && (deleted.old == list[i].old))
								{
									list.erase(list.begin() + i);
									
								}
							}
						}
						
						else
						{
							cout << "Good bye!" << endl;
							system("pause");
							break;
						}
					
					break;
				}
				case 4: //category filter
				{
					string cat;
					cout << "Write category (sport/heavy/light):" << endl;
					cin >> cat;
					int counT = 0;
					for (int i = 0; i < list.size(); i++)
					{
						if (list[i].category == cat)
						{
							cout << left << setw(10) << list[i].id << setw(10) << list[i].mark << setw(10) << list[i].year << setw(10) << list[i].color << setw(10) << list[i].category << setw(10) << list[i].price << setw(10) << list[i].old << endl;
							counT++;
						}
						if(counT == 0)
						{
							cout << "Not found =(" << endl;
							system("pause");
							break;
						}
					}
					break;
				}
				case 5: //write information into file
				{
					ofstream fout;
					fout.open("output.txt");
					for (int i = 0; i < list.size(); i++)
					{
						fout << left << setw(10) << list[i].id << setw(10) << list[i].mark << setw(10) << list[i].year << setw(10) << list[i].color << setw(10) << list[i].category << setw(10) << list[i].price << setw(10) << list[i].old << endl;
					}
					fout.close();
					break;
				}
				case 6: //Year of pass sort
				{
					for (int i = 0; i < list.size() - 1; i++)
					{
						for (int j = 0; j < list.size() - 1; j++)
						{
							if (list[i].year > list[i + 1].year)
							{
								swap(list[i], list[i + 1]);
							}
						}
					}
					break;
				}

				case 7: //Maximal cost bound
				{
					int maxcost;
					int count = 0;
					cout << "Write maximal cost" << endl;
					cin >> maxcost;
					for (int i = 0; i < list.size(); i++)
					{
						if (list[i].price <= maxcost)
						{
							cout << left << setw(10) << list[i].id << setw(10) << list[i].mark << setw(10) << list[i].year << setw(10) << list[i].color << setw(10) << list[i].category << setw(10) << list[i].price << setw(10) << list[i].old << endl;
							count++;
						}
						
					}
					if (count == 0)
					{
						cout << "Not found!" << endl;
						break;
					}
					break;
				}
				
				case 8:
				{
					
					int ID;
					
					
					ofstream YV;
					YV.open("YourVehicle.txt");
					cout << "Write vehicle's ID for add information of this vehicle into a file" << endl;
					cin >> ID;
					for (int i = 0; i < list.size(); i++)
					{
						if (list[i].id == ID)
						{	

							YV << "____________________" << endl;
							YV << "Mark:       |   " << list[i].mark << endl;
							YV << "____________________" << endl;
							YV << "Category:   |   " << list[i].category << endl;
							YV << "____________________" << endl;
							YV << "Price:      |   " << list[i].price << endl;
							YV << "____________________" << endl;
							YV << "Color:      |   " << list[i].color << endl;
							YV << "____________________" << endl;
							YV << "Year:       |   " << list[i].year << endl;
							YV << "____________________" << endl;
							YV << "Used:       |    " << list[i].old << endl;
							YV << "____________________" << endl;

						}
					}
					YV.close();
					break;
				}
				case 0:
				{
					char g;
					cout << "Do you really want to leave the programm? (Y/N)"<< endl;
					if (g == 'y' || g == 'Y')
					{
						cout << "Good bye!" << endl;
						system("pause");
						return 0;
					}
					else
					{
						break;
					}
					
					
				}
				default:
				{
					cout << "Error! Please, try again!" << endl;
					break;
				}
		}
	}




	system("pause");
	return 0;
}
